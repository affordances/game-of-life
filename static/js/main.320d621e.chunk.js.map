{"version":3,"sources":["presets.js","App.js","index.js"],"names":["presets","small exploder","exploder","nine cell row","tumbler","library","add","faPlay","faPause","faStepForward","faTimes","oneGridSide","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","grid","isGridEmpty","selectMode","isRunning","iterationCount","sliderValue","refreshRate","makeEmptyGrid","Array","fill","map","_","startSimulation","e","preventDefault","setState","simulationLoop","stopSimulation","clearTimeout","timeout","createNextIteration","setTimeout","advanceOneIteration","row","slice","i","length","j","count","countNeighbors","isWithinGrid","rowIndex","cellIndex","findNeighbors","neighbors","position","mouseDownHandler","toggleCell","mouseEnterHandler","stateOfGrid","resetGrid","onSliderChange","onAfterChange","value","loadPreset","preset","forEach","_this2","window","addEventListener","console","log","removeEventListener","_this3","react_default","a","createElement","className","href","target","rel","key","cell","onMouseDown","onMouseEnter","onClick","react_fontawesome_index_es","icon","size","es","min","max","onChange","trackStyle","backgroundColor","borderRadius","height","handleStyle","border","borderColor","outline","boxShadow","width","marginLeft","marginTop","railStyle","React","Component","ReactTimeout","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.320d621e.chunk.js","sourcesContent":["let smallExploder = [\n  [6, 7],\n  [7, 6],\n  [7, 7],\n  [7, 8],\n  [8, 6],\n  [8, 8],\n  [9, 7]\n];\n\nlet exploder = [\n  [5, 5],\n  [5, 7],\n  [5, 9],\n  [6, 5],\n  [6, 9],\n  [7, 5],\n  [7, 9],\n  [8, 5],\n  [8, 9],\n  [9, 5],\n  [9, 7],\n  [9, 9]\n];\n\nlet nineCellRow = [\n  [7, 3],\n  [7, 4],\n  [7, 5],\n  [7, 6],\n  [7, 7],\n  [7, 8],\n  [7, 9],\n  [7, 10],\n  [7, 11]\n];\n\nlet tumbler = [\n  [4, 5],\n  [4, 6],\n  [4, 8],\n  [4, 9],\n  [5, 5],\n  [5, 6],\n  [5, 8],\n  [5, 9],\n  [6, 6],\n  [6, 8],\n  [7, 4],\n  [7, 6],\n  [7, 8],\n  [7, 10],\n  [8, 4],\n  [8, 6],\n  [8, 8],\n  [8, 10],\n  [9, 4],\n  [9, 5],\n  [9, 9],\n  [9, 10]\n];\n\nconst presets = {\n  \"small exploder\": smallExploder,\n  \"exploder\": exploder,\n  \"nine cell row\": nineCellRow,\n  \"tumbler\": tumbler\n};\n\nexport default presets;\n","import React from 'react';\nimport ReactTimeout from 'react-timeout';\nimport Slider from 'rc-slider';\nimport presets from './presets';\nimport 'rc-slider/assets/index.css';\nimport './App.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay,\n         faPause,\n         faStepForward,\n         faTimes } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faPlay, faPause, faStepForward, faTimes);\n\nconst oneGridSide = 15;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: [],\n      isGridEmpty: true,\n      selectMode: false,\n      isRunning: false,\n      iterationCount: 0,\n      sliderValue: -550,\n      refreshRate: 550\n    };\n\n    this.makeEmptyGrid = () => {\n      return Array(oneGridSide).fill(null).map(_ =>\n        Array(oneGridSide).fill(false)\n      );\n    };\n\n    this.startSimulation = e => {\n      e.preventDefault();\n      if (this.state.isRunning) { return; }\n      this.setState({ isRunning: true },\n        () => this.simulationLoop());\n    };\n\n    this.stopSimulation = e => {\n      e.preventDefault();\n      if (!this.state.isRunning) { return; }\n      clearTimeout(this.timeout);\n      this.setState({ isRunning: false });\n    };\n\n    this.simulationLoop = () => {\n      this.createNextIteration();\n      this.timeout = setTimeout(() => {\n        this.simulationLoop();\n      }, this.state.refreshRate);\n    };\n\n    this.advanceOneIteration = e => {\n      e.preventDefault();\n      if (this.state.isRunning || this.state.isGridEmpty) { return; }\n      this.createNextIteration();\n    };\n\n    this.createNextIteration = () => {\n      let grid = this.state.grid.map(row => row.slice());\n      for (let i = 0; i < grid.length; i++) {\n        for (let j = 0; j < grid[i].length; j++) {\n          let count = this.countNeighbors(i, j);\n          if (grid[i][j] && (count < 2 || count > 3)) {\n            grid[i][j] = false;\n          } else if (count === 3) {\n            grid[i][j] = true;\n          }\n        }\n      }\n      this.setState({ grid: grid,\n                      iterationCount: this.state.iterationCount + 1 });\n    };\n\n    this.isWithinGrid = (rowIndex, cellIndex) => {\n      return ((rowIndex >= 0 && rowIndex <= oneGridSide - 1) &&\n              (cellIndex >= 0 && cellIndex <= oneGridSide - 1));\n    };\n\n    this.findNeighbors = (rowIndex, cellIndex) => {\n      return [\n        [rowIndex - 1, cellIndex - 1],\n        [rowIndex - 1, cellIndex],\n        [rowIndex - 1, cellIndex + 1],\n        [rowIndex, cellIndex - 1],\n        [rowIndex, cellIndex + 1],\n        [rowIndex + 1, cellIndex - 1],\n        [rowIndex + 1, cellIndex],\n        [rowIndex + 1, cellIndex + 1]\n      ];\n    };\n\n    this.countNeighbors = (rowIndex, cellIndex) => {\n      const neighbors = this.findNeighbors(rowIndex, cellIndex);\n      let count = 0;\n      for (let i = 0; i < neighbors.length; i++) {\n        if (this.isWithinGrid(neighbors[i][0], neighbors[i][1])) {\n           const position = neighbors[i];\n           if (this.state.grid[position[0]][position[1]]) {\n             count += 1;\n           }\n         }\n      }\n      return count;\n    };\n\n    this.mouseDownHandler = (rowIndex, cellIndex) => () => {\n      if (!this.state.isRunning) {\n        this.toggleCell(rowIndex, cellIndex);\n        this.setState({ selectMode: true });\n      }\n    };\n\n    this.mouseEnterHandler = (rowIndex, cellIndex) => () => {\n      if (!this.state.isRunning && this.state.selectMode) {\n        this.toggleCell(rowIndex, cellIndex);\n      }\n    };\n\n    this.toggleCell = (rowIndex, cellIndex) => {\n      const stateOfGrid = this.state.isGridEmpty ? false : true;\n      let grid = this.state.grid;\n      grid[rowIndex][cellIndex] = !grid[rowIndex][cellIndex];\n      this.setState({ grid: grid, isGridEmpty: stateOfGrid });\n    };\n\n    this.resetGrid = e => {\n      e.preventDefault();\n      clearTimeout(this.timeout);\n      this.setState({ grid: this.makeEmptyGrid(),\n                      isGridEmpty: true,\n                      isRunning: false,\n                      iterationCount: 0,\n                      sliderValue: -550,\n                      refreshRate: 550 });\n    };\n\n    this.onSliderChange = (sliderValue) => {\n      this.setState({ sliderValue });\n    };\n\n    this.onAfterChange = (value) => {\n      this.setState({ refreshRate: value * -1 });\n    };\n\n    this.loadPreset = (preset) => () => {\n      clearTimeout(this.timeout);\n      let grid = this.makeEmptyGrid();\n      const presetToLoad = presets[preset];\n      presetToLoad.forEach(position => {\n        grid[position[0]][position[1]] = true;\n      });\n      this.setState({ grid: grid,\n                      isGridEmpty: false,\n                      isRunning: false,\n                      iterationCount: 0 });\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"mouseup\", () => {\n      console.log(\"poop\");\n      this.setState({ selectMode: false });\n    });\n    this.setState({ grid: this.makeEmptyGrid() });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"mouseup\");\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>{\"CGOL\"}</h1>\n          <a href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\"\n             target=\"_blank\" rel=\"noopener noreferrer\">\n            ?\n          </a>\n        </header>\n        <div className=\"grid-controls-presets-container\">\n          <div className=\"grid-slider-iteration-count-container\">\n            <div className=\"grid-container\">\n              {this.state.grid.map((row, rowIndex) => {\n                return <div key={rowIndex}\n                            className=\"row\">{row.map((cell, cellIndex) => {\n                  return <div key={cellIndex}\n                              className={cell ? \"living-cell\" : \"dead-cell\"}\n                              onMouseDown={this.mouseDownHandler(rowIndex, cellIndex)}\n                              onMouseEnter={this.mouseEnterHandler(rowIndex, cellIndex)}\n                         >{cell}</div>;\n                })}</div>;\n              })}\n            </div>\n          </div>\n          <div className=\"panel-container\">\n            <div className=\"controls-container\">\n              <div className=\"controls-top-row\">\n                <div className=\"control-wrapper\"\n                     onClick={this.startSimulation}>\n                  <FontAwesomeIcon icon=\"play\" size=\"2x\" />\n                </div>\n                <div className=\"control-wrapper\"\n                     onClick={this.stopSimulation}>\n                  <FontAwesomeIcon icon=\"pause\" size=\"2x\" />\n                </div>\n                <div className=\"preset-wrapper\"\n                     onClick={this.loadPreset(\"small exploder\")}>\n                  1\n                </div>\n                <div className=\"preset-wrapper\"\n                     onClick={this.loadPreset(\"exploder\")}>\n                  2\n                </div>\n              </div>\n              <div className=\"controls-bottom-row\">\n                <div className=\"control-wrapper\"\n                     onClick={this.advanceOneIteration}>\n                  <FontAwesomeIcon icon=\"step-forward\" size=\"2x\" />\n                </div>\n                <div className=\"control-wrapper\"\n                     onClick={this.resetGrid}>\n                  <FontAwesomeIcon icon=\"times\" size=\"2x\" />\n                </div>\n                <div className=\"preset-wrapper\"\n                     onClick={this.loadPreset(\"nine cell row\")}>\n                  3\n                </div>\n                <div className=\"preset-wrapper\"\n                     onClick={this.loadPreset(\"tumbler\")}>\n                  4\n                </div>\n              </div>\n            </div>\n            <div className=\"slider-container\">\n              <Slider min={-1000}\n                      max={-100}\n                      value={this.state.sliderValue}\n                      onChange={this.onSliderChange}\n                      onAfterChange={this.onAfterChange}\n                      trackStyle={{ backgroundColor: 'blue',\n                                    borderRadius: 0, height: 5 }}\n                      handleStyle={{\n                        border: '2px solid black',\n                        borderColor: 'black',\n                        outline: 'none',\n                        boxShadow: 'none',\n                        height: 20,\n                        width: 20,\n                        marginLeft: -14,\n                        marginTop: -9,\n                        backgroundColor: 'white',\n                      }}\n                      railStyle={{ backgroundColor: 'gray',\n                                   borderRadius: 0, height: 5 }}/>\n            </div>\n            <div className=\"iteration-count\">{this.state.iterationCount}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReactTimeout(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
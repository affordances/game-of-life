{"version":3,"sources":["presets.js","App.js","index.js"],"names":["presets","small exploder","exploder","nine cell row","tumbler","library","add","faPlay","faPause","faStepForward","faTimes","oneGridSide","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","grid","selectMode","isRunning","iterationCount","sliderValue","refreshRate","makeEmptyGrid","Array","fill","map","_","isGridEmpty","i","length","j","toggleSimulation","e","preventDefault","clearTimeout","timeout","setState","simulationLoop","createNextIteration","setTimeout","advanceOneIteration","row","slice","count","countNeighbors","isWithinGrid","rowIndex","cellIndex","findNeighbors","neighbors","position","mouseDownHandler","toggleCell","mouseEnterHandler","resetGrid","onSliderChange","onAfterChange","value","loadPreset","preset","forEach","_this2","window","addEventListener","removeEventListener","_this3","react_default","a","createElement","className","href","target","rel","key","cell","onMouseDown","onMouseEnter","onClick","react_fontawesome_index_es","icon","size","es","min","max","onChange","trackStyle","backgroundColor","borderRadius","height","handleStyle","border","borderColor","outline","boxShadow","width","marginLeft","marginTop","railStyle","React","Component","ReactTimeout","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d92f798f.chunk.js","sourcesContent":["let smallExploder = [\n  [6, 7],\n  [7, 6],\n  [7, 7],\n  [7, 8],\n  [8, 6],\n  [8, 8],\n  [9, 7]\n];\n\nlet exploder = [\n  [5, 5],\n  [5, 7],\n  [5, 9],\n  [6, 5],\n  [6, 9],\n  [7, 5],\n  [7, 9],\n  [8, 5],\n  [8, 9],\n  [9, 5],\n  [9, 7],\n  [9, 9]\n];\n\nlet nineCellRow = [\n  [7, 3],\n  [7, 4],\n  [7, 5],\n  [7, 6],\n  [7, 7],\n  [7, 8],\n  [7, 9],\n  [7, 10],\n  [7, 11]\n];\n\nlet tumbler = [\n  [4, 5],\n  [4, 6],\n  [4, 8],\n  [4, 9],\n  [5, 5],\n  [5, 6],\n  [5, 8],\n  [5, 9],\n  [6, 6],\n  [6, 8],\n  [7, 4],\n  [7, 6],\n  [7, 8],\n  [7, 10],\n  [8, 4],\n  [8, 6],\n  [8, 8],\n  [8, 10],\n  [9, 4],\n  [9, 5],\n  [9, 9],\n  [9, 10]\n];\n\nconst presets = {\n  \"small exploder\": smallExploder,\n  \"exploder\": exploder,\n  \"nine cell row\": nineCellRow,\n  \"tumbler\": tumbler\n};\n\nexport default presets;\n","import React from 'react';\nimport ReactTimeout from 'react-timeout';\nimport Slider from 'rc-slider';\nimport presets from './presets';\nimport 'rc-slider/assets/index.css';\nimport './App.css';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay,\n         faPause,\n         faStepForward,\n         faTimes } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faPlay, faPause, faStepForward, faTimes);\n\nconst oneGridSide = 15;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: [],\n      selectMode: false,\n      isRunning: false,\n      iterationCount: 0,\n      sliderValue: -540,\n      refreshRate: 540\n    };\n\n    this.makeEmptyGrid = () => {\n      return Array(oneGridSide).fill(null).map(_ =>\n        Array(oneGridSide).fill(false)\n      );\n    };\n\n    this.isGridEmpty = () => {\n      for (let i = 0; i < this.state.grid.length; i++) {\n        for (let j = 0; j < this.state.grid[i].length; j++) {\n          if (this.state.grid[i][j] === true) {\n            return false;\n          }\n        }\n      }\n      return true;\n    };\n\n    this.toggleSimulation = e => {\n      e.preventDefault();\n      if (this.isGridEmpty()) { return; }\n      if (this.state.isRunning) {\n        clearTimeout(this.timeout);\n        this.setState({ isRunning: false });\n        return;\n      }\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n      this.setState({ isRunning: true },\n        () => this.simulationLoop());\n    };\n\n    this.simulationLoop = () => {\n      this.createNextIteration();\n      this.timeout = setTimeout(() => {\n        this.simulationLoop();\n      }, this.state.refreshRate);\n    };\n\n    this.advanceOneIteration = e => {\n      e.preventDefault();\n      if (this.state.isRunning || this.isGridEmpty()) { return; }\n      this.createNextIteration();\n    };\n\n    this.createNextIteration = () => {\n      let grid = this.state.grid.map(row => row.slice());\n      for (let i = 0; i < grid.length; i++) {\n        for (let j = 0; j < grid[i].length; j++) {\n          let count = this.countNeighbors(i, j);\n          if (grid[i][j] && (count < 2 || count > 3)) {\n            grid[i][j] = false;\n          } else if (count === 3) {\n            grid[i][j] = true;\n          }\n        }\n      }\n      this.setState({ grid: grid,\n                      iterationCount: this.state.iterationCount + 1 });\n    };\n\n    this.isWithinGrid = (rowIndex, cellIndex) => {\n      return ((rowIndex >= 0 && rowIndex <= oneGridSide - 1) &&\n              (cellIndex >= 0 && cellIndex <= oneGridSide - 1));\n    };\n\n    this.findNeighbors = (rowIndex, cellIndex) => {\n      return [\n        [rowIndex - 1, cellIndex - 1],\n        [rowIndex - 1, cellIndex],\n        [rowIndex - 1, cellIndex + 1],\n        [rowIndex, cellIndex - 1],\n        [rowIndex, cellIndex + 1],\n        [rowIndex + 1, cellIndex - 1],\n        [rowIndex + 1, cellIndex],\n        [rowIndex + 1, cellIndex + 1]\n      ];\n    };\n\n    this.countNeighbors = (rowIndex, cellIndex) => {\n      const neighbors = this.findNeighbors(rowIndex, cellIndex);\n      let count = 0;\n      for (let i = 0; i < neighbors.length; i++) {\n        if (this.isWithinGrid(neighbors[i][0], neighbors[i][1])) {\n           const position = neighbors[i];\n           if (this.state.grid[position[0]][position[1]]) {\n             count += 1;\n           }\n         }\n      }\n      return count;\n    };\n\n    this.mouseDownHandler = (rowIndex, cellIndex) => () => {\n      if (!this.state.isRunning) {\n        this.toggleCell(rowIndex, cellIndex);\n        this.setState({ selectMode: true });\n      }\n    };\n\n    this.mouseEnterHandler = (rowIndex, cellIndex) => () => {\n      if (!this.state.isRunning && this.state.selectMode) {\n        this.toggleCell(rowIndex, cellIndex);\n      }\n    };\n\n    this.toggleCell = (rowIndex, cellIndex) => {\n      let grid = this.state.grid;\n      grid[rowIndex][cellIndex] = !grid[rowIndex][cellIndex];\n      this.setState({ grid: grid });\n    };\n\n    this.resetGrid = e => {\n      e.preventDefault();\n      clearTimeout(this.timeout);\n      this.setState({ grid: this.makeEmptyGrid(),\n                      isRunning: false,\n                      iterationCount: 0,\n                      sliderValue: -540,\n                      refreshRate: 540 });\n    };\n\n    this.onSliderChange = (sliderValue) => {\n      this.setState({ sliderValue });\n    };\n\n    this.onAfterChange = (value) => {\n      this.setState({ refreshRate: value * -1 });\n    };\n\n    this.loadPreset = (preset) => () => {\n      clearTimeout(this.timeout);\n      let grid = this.makeEmptyGrid();\n      const presetToLoad = presets[preset];\n      presetToLoad.forEach(position => {\n        grid[position[0]][position[1]] = true;\n      });\n      this.setState({ grid: grid,\n                      isRunning: false,\n                      iterationCount: 0 });\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"mouseup\", () => {\n      this.setState({ selectMode: false });\n    });\n    this.setState({ grid: this.makeEmptyGrid() });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"mouseup\");\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>{\"CGOL\"}</h1>\n          <a href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\"\n             target=\"_blank\" rel=\"noopener noreferrer\">\n            ?\n          </a>\n        </header>\n        <div className=\"grid-controls-presets-container\">\n          <div className=\"grid-slider-iteration-count-container\">\n            <div className=\"grid-container\">\n              {this.state.grid.map((row, rowIndex) => {\n                return <div key={rowIndex}\n                            className=\"row\">{row.map((cell, cellIndex) => {\n                  return <div key={cellIndex}\n                              className={cell ? \"living-cell\" : \"dead-cell\"}\n                              onMouseDown={this.mouseDownHandler(rowIndex, cellIndex)}\n                              onMouseEnter={this.mouseEnterHandler(rowIndex, cellIndex)}\n                         >{cell}</div>;\n                })}</div>;\n              })}\n            </div>\n          </div>\n          <div className=\"panel-container\">\n            <div className=\"controls-container\">\n              <div className=\"controls-top-row\">\n                <div className=\"play-pause-wrapper\"\n                     onClick={this.toggleSimulation}>\n                       {this.state.isRunning ?\n                          <FontAwesomeIcon icon=\"pause\" size=\"2x\" /> :\n                          <FontAwesomeIcon icon=\"play\" size=\"2x\" />}\n                </div>\n                <div className=\"preset-wrapper\"\n                     onClick={this.loadPreset(\"small exploder\")}>\n                  1\n                </div>\n                <div className=\"preset-wrapper\"\n                     onClick={this.loadPreset(\"exploder\")}>\n                  2\n                </div>\n              </div>\n              <div className=\"controls-bottom-row\">\n                <div className=\"control-wrapper\"\n                     onClick={this.advanceOneIteration}>\n                  <FontAwesomeIcon icon=\"step-forward\" size=\"2x\" />\n                </div>\n                <div className=\"control-wrapper\"\n                     onClick={this.resetGrid}>\n                  <FontAwesomeIcon icon=\"times\" size=\"2x\" />\n                </div>\n                <div className=\"preset-wrapper\"\n                     onClick={this.loadPreset(\"nine cell row\")}>\n                  3\n                </div>\n                <div className=\"preset-wrapper\"\n                     onClick={this.loadPreset(\"tumbler\")}>\n                  4\n                </div>\n              </div>\n            </div>\n            <div className=\"slider-container\">\n              <Slider min={-1000}\n                      max={-100}\n                      value={this.state.sliderValue}\n                      onChange={this.onSliderChange}\n                      onAfterChange={this.onAfterChange}\n                      trackStyle={{ backgroundColor: 'blue',\n                                    borderRadius: 0, height: 5 }}\n                      handleStyle={{\n                        border: '2px solid black',\n                        borderColor: 'black',\n                        outline: 'none',\n                        boxShadow: 'none',\n                        height: 20,\n                        width: 20,\n                        marginLeft: -14,\n                        marginTop: -9,\n                        backgroundColor: 'white',\n                      }}\n                      railStyle={{ backgroundColor: 'gray',\n                                   borderRadius: 0, height: 5 }}/>\n            </div>\n            <div className=\"iteration-count\">{this.state.iterationCount}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReactTimeout(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}